{
  "id" : "how-are-passwords-stored",
  "title" : "How are Passwords Stored?",
  "description" : "Ever wonder how websites securely store your passwords?",
  "tags" : {
    "difficulty" : "Advanced",
    "categories" : [
      "Passwords",
      "Encryption"
    ]
  },
  "content" : [
    {
      "type" : "h2",
      "content" : "What's Wrong with Storing Passwords in Plain Text?"
    },
    {
      "type" : "p",
      "content" : "While this may seem like the intuitive answer, it leaves a service and its users extremely vulnerable. If a hacker managed to gain access to this database, it would be extremely easy to leak this sensitive information in a data breach."
    },
    {
      "type" : "h2",
      "content" : "Basic Encryption"
    },
    {
      "type" : "p",
      "content" : "Well, if we don't want hackers to be able to access this data, why dont we just encrypt it? This is a better solution, but there is one problem. Encryption uses keys, which can then decrypt the data. Chances are that these keys need to be stored somewhere as well, meaning that hackers may be able to decrypt passwords anyway if they get access to these keys."
    },
    {
      "type" : "img",
      "src" : "../assets/images/articles/encryption.png"
    },
    {
      "type" : "h2",
      "content" : "Hashing Passwords"
    },
    {
      "type" : "p",
      "content" : "Hashing works similar to encryption in that it 'discombobulates' information into seemingly meaningless characters, except it only works one way. This means that even if hackers obtain the key used to hash a password, they will not be able to obtain the original password (until a method to reverse a hash is discovered)."
    },
    {
      "type" : "h2",
      "content" : "Hashing With Salting"
    },
    {
      "type" : "p",
      "content" : "An improvement can be made on the above technique. Many services actually 'salt' your password before hashing it, meaning they add a randomly generated string to the password, then run it through a hashing algorithm. This technique is used to thwart dictionary attacks, where attackers precompute many hashes based on common passwords, then compare them to the hashes stored in the database to look for a match."
    },
    {
      "type" : "img",
      "src" : "../assets/images/articles/saltshaker.png"
    }
  ],
  "quiz" : [
    {
      "title" : "Why is encryption weaker than hashing for passwords?",
      "choices" : [
        {
          "content" : "Encryption is a more primitive technique",
          "correct" : false
        },
        {
          "content" : "Encryption is bi-directional, whereas hashing is one-way",
          "correct" : true
        },
        {
          "content" : "Encryption is less often used by experts",
          "correct" : false
        }
      ] 
    },
    {
     "title" : "Cryptographic salts are:",
     "choices" : [
       {
         "content" : "Random data appended to a password",
         "correct" : true
       },
       {
         "content" : "A set cryptography algorithms",
         "correct" : false
       },
       {
         "content" : "A condiment",
         "correct" : false
       }
     ]
    }
  ]
}